{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/components/verifiedtextbox.js","webpack:///./src/components/word_fix_suggestion.js","webpack:///./src/components/feedbackexplanation.js","webpack:///./src/pages/index.js","webpack:///./src/utils/words.js"],"names":["Footer","className","href","VerifiedTextbox","props","handleChange","ev","formattedContent","target","value","words","usedWords","forEach","wordObject","word","wordRegex","RegExp","indexOf","push","replace","console","log","length","setUsedWords","setState","content","state","render","type","placeholder","this","onChange","dangerouslySetInnerHTML","__html","Component","withMixpanel","WordFixSuggestion","reason","suggestion","source","rel","FeedbackExplanation","map","w","IndexPage","updateUsedWords","componentDidMount","mixpanel","track","title","allWords","REASONS","genderedWords","GENDERED","INAPPROPRIATE","UNTHREATENING","DISAGREEING","ableistWords","ABLEIST","callousWords","WAR","DEATH","racistWords","RACIST_ORIGINS","transphobicWords","INCLUSIVITY","IMPLIED_PREFERENCE","miscWords","SLUR","DERIVED_FROM_SLUR","module","exports"],"mappings":"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","file":"component---src-pages-index-js-f4b200cb7de73f79096a.js","sourcesContent":["import React from \"react\"\n\nconst Footer = () => (\n    <div className=\"footer\">\n      <a href=\"http://www.cass.codes\">made by <span className=\"underline\">cassie</span></a>\n    </div>\n)\n\nexport default Footer;\n","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass VerifiedTextbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            formattedContent: '',\n        };\n    }\n\n    handleChange = (ev) => {\n        let content, formattedContent = ev.target.value;\n        let {words} = this.props;\n        let usedWords = [];\n\n        if (!words) return \n\n        words.forEach(wordObject => {\n            const word = wordObject.word;\n            const wordRegex = new RegExp(word);\n            if (formattedContent.indexOf(word) >= 0) {\n                usedWords.push(wordObject);\n            }\n            formattedContent = formattedContent.replace(wordRegex, `<span class=\"word-warning\">${word}</span>`)\n        });\n\n        console.log(usedWords);\n\n        usedWords.length && this.props.setUsedWords(usedWords);\n        this.setState({content, formattedContent});\n        \n    }\n\n    render() {\n        return (  \n            <div>\n                <input type=\"text\" placeholder={\"put feedback here\"} className='feedback--textbox' value={this.state.content} onChange={this.handleChange}/>\n                <div className=\"feedback--output\" dangerouslySetInnerHTML={{ __html: this.state.formattedContent }}/>     \n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(VerifiedTextbox);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass WordFixSuggestion extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {word} = this.props;\n        const {reason, suggestion, source} = word;\n        return (  \n            <div className=\"word-section\">\n                <span className=\"word-warning\">{word.word}</span>\n                {reason && <div>{`${reason}.`}</div>}\n                {suggestion && <div>\n                    <span>{`Try `}</span>\n                    <span className=\"word--suggestion\">{`${suggestion}`}</span>\n                    <span> {` instead`} </span>\n                </div>}\n                {source && <div className=\"word--learn\"><a rel=\"noopener noreferrer\" target=\"_blank\" href={source}>learn more</a></div>}\n\n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(WordFixSuggestion);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport WordFixSuggestion from \"../components/word_fix_suggestion\";\n\n\nclass FeedbackExplanation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {usedWords} = this.props;\n\n        return (  \n            <div className='feedback--explanation'>\n                <ul>\n                    {usedWords.map(w => <WordFixSuggestion word={w}/>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(FeedbackExplanation);","import React, {Component} from \"react\"\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Footer from \"../components/footer\";\nimport VerifiedTextbox from \"../components/verifiedtextbox\";\nimport FeedbackExplanation from \"../components/feedbackexplanation\";\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport allWords from '../utils/words'\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        usedWords: [],\n    };\n  }\n\n  componentDidMount() {\n    const { mixpanel } = this.props\n    mixpanel.track('Page Load');\n  }\n\n  updateUsedWords = (usedWords) => {\n    this.setState({usedWords})\n  }\n\n  render() {\n    const {usedWords} = this.state;\n\n    return (\n      <Layout>\n        <SEO title=\"Fair Feedback\" />\n        <div className=\"feedback\">\n          <div className=\"feedback--input\">\n            <h3>Type here:</h3>\n            <VerifiedTextbox words={allWords} setUsedWords={this.updateUsedWords}/>\n          </div>\n          <FeedbackExplanation usedWords={usedWords}/>\n        </div>\n        <Footer/>\n      </Layout>\n    );\n  }\n}\n\nexport default withMixpanel()(IndexPage)\n","const GENDERED = {\n    'GENDERED': `this word is used disproportionately to describe women`,\n    'TONE' : `this is tone policing`,\n    'UNTHREATENING': `this word is used to praise women for being non-threatening`,\n    'INAPPROPRIATE': `it is inappropriate to use this word to describe a coworker`,\n    'DISAGREEING': `it is often used for people who \"disagree while female\"`,\n}\n\nconst ABLEIST = {\n    'ABLEIST': `it perpetuates ableist language`\n}\nconst CALLOUS = {\n    'WAR': `it may be seen as making light of war`,\n    'DEATH': `it makes light of death`\n}\nconst RACIST = {\n    'RACIST_ORIGINS': `this word has racist origins`,\n    'RACIST': `this is a racist term`\n}\nconst TRANSPHOBIC = {\n    'INCLUSIVITY': `this phrase isn't inclusive of everyone`,\n    'IMPLIED_PREFERENCE': `this implies that someone's gender identity is merely a preference`\n}\nconst MISC = {\n    'SLUR': `this is a slur`,\n    'DERIVED_FROM_SLUR': `this is derived from a slur`\n}\n\n\nconst REASONS = {\n    GENDERED,\n    ABLEIST,\n    CALLOUS,\n    RACIST,\n    TRANSPHOBIC,\n    MISC\n}\n\nconst genderedWords = [\n    {\n        word: 'bossy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: 'assertive',\n        source: null\n    },\n    {\n        word: 'abrasive',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'cute',\n        reason: REASONS.GENDERED.INAPPROPRIATE,\n        suggestion: null,\n        source: null\n    },       \n    {\n        word: 'aggressive',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },   \n    {\n        word: 'shrill',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'dramatic',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'bitchy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'bitch',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'ditzy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'nag',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'ladylike',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'bubbly',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sassy',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'chatty',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'emotional',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'hysterical',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'flaky',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'moody',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'oversensitive',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n];\nconst ableistWords = [\n    {\n        word: 'crazy',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'insane',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'lame',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'stupid',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'dumb',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'lunatic',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'looney',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'psycho',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'schizo',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'senile',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sociopath',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'maniac',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'moron',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'nuts',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sanity check',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: 'asking for validation',\n        source: null\n    },\n\n];\nconst callousWords = [\n    {\n        word: 'war room',\n        reason: REASONS.CALLOUS.WAR,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'war story',\n        reason: REASONS.CALLOUS.WAR,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'kill switch',\n        reason: REASONS.CALLOUS.DEATH,\n        suggestion: null,\n        source: null\n    },\n];\nconst racistWords = [\n    {\n        word: 'peanut gallery',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sold down the river',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'eenie, meenie, miney, mo',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'hip hip hooray',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'hooray',\n        source: null\n    },\n    {\n        word: 'uppity',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'master',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'primary or main',\n        source: null\n    },\n    {\n        word: 'slave',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'replica',\n        source: null\n    },\n    {\n        word: 'whitelist',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'allowlist',\n        source: null\n    },\n    {\n        word: 'blacklist',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'denylist',\n        source: null\n    },\n    {\n        word: 'ghetto',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'brownbag',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n\n\n];\nconst transphobicWords = [\n    {\n        word: 'he or she',\n        reason: REASONS.TRANSPHOBIC.INCLUSIVITY,\n        suggestion: 'they',\n        source: null\n    },\n    {\n        word: 'preferred pronouns',\n        reason: REASONS.TRANSPHOBIC.IMPLIED_PREFERENCE,\n        suggestion: 'pronouns',\n        source: null\n    },\n    {\n        word: 'self-identifies',\n        reason: REASONS.TRANSPHOBIC.IMPLIED_PREFERENCE,\n        suggestion: 'is',\n        source: null\n    },\n];\nconst miscWords = [\n    {\n        word: 'gypsy',\n        reason: REASONS.MISC.SLUR,\n        suggestion: null,\n        source: `https://now.org/blog/the-g-word-isnt-for-you-how-gypsy-erases-romani-women/`\n    },\n    {\n        word: 'gyp ',\n        reason: REASONS.MISC.DERIVED_FROM_SLUR,\n        suggestion: null,\n        source: `https://now.org/blog/the-g-word-isnt-for-you-how-gypsy-erases-romani-women/`\n    },\n];\n\nconst allWords = [...genderedWords, ...ableistWords, ...callousWords, ...racistWords, ...transphobicWords, ...miscWords];\n\nmodule.exports = allWords;"],"sourceRoot":""}