{"version":3,"sources":["webpack:///./src/images/feedback.gif","webpack:///./src/components/footer.js","webpack:///./src/components/verifiedtextbox.js","webpack:///./src/components/word_fix_suggestion.js","webpack:///./src/components/feedbackexplanation.js","webpack:///./src/pages/index.js","webpack:///./src/utils/words.js"],"names":["module","exports","Footer","className","href","VerifiedTextbox","props","handleChange","ev","formattedContent","target","value","words","usedWords","forEach","wordObject","word","wordRegex","RegExp","indexOf","push","replace","setUsedWords","setState","content","state","render","rows","columns","placeholder","this","onChange","dangerouslySetInnerHTML","__html","Component","withMixpanel","WordFixSuggestion","reason","suggestion","source","rel","FeedbackExplanation","map","w","IndexPage","updateUsedWords","componentDidMount","mixpanel","track","title","src","feedbackGif","alt","allWords","REASONS","GENDERED","ABLEIST","CALLOUS","RACIST","TRANSPHOBIC","MISC","genderedWords","INAPPROPRIATE","UNTHREATENING","DISAGREEING","NONINCLUSIVE","ableistWords","callousWords","WAR","DEATH","racistWords","RACIST_ORIGINS","transphobicWords","INCLUSIVITY","IMPLIED_PREFERENCE","miscWords","SLUR","DERIVED_FROM_SLUR","BETTER_LANGUAGE_EXISTS"],"mappings":"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","file":"component---src-pages-index-js-1729ccc551df394cfc6a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/feedback-54dd844219cf508636a56c23dd594ad7.gif\";","import React from \"react\"\n\nconst Footer = () => (\n    <div className=\"footer\">\n      <a href=\"http://www.cass.codes\">made by <span className=\"underline\">cassie</span></a>\n    </div>\n)\n\nexport default Footer;\n","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass VerifiedTextbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            formattedContent: '',\n        };\n    }\n\n    handleChange = (ev) => {\n        let content, formattedContent = ev.target.value;\n        let {words} = this.props;\n        let usedWords = [];\n\n        if (!words) return \n\n        words.forEach(wordObject => {\n            const word = wordObject.word;\n            const wordRegex = new RegExp(word);\n            if (formattedContent.indexOf(word) >= 0) {\n                usedWords.push(wordObject);\n            }\n            formattedContent = formattedContent.replace(wordRegex, `<span class=\"word-warning\">${word}</span>`)\n        });\n\n        this.props.setUsedWords(usedWords);\n        this.setState({content, formattedContent});\n        \n    }\n\n    render() {\n        return (  \n            <div>\n                <textarea rows=\"10\" columns=\"30\" placeholder={\"put feedback here\"} className='feedback--textbox' value={this.state.content} onChange={this.handleChange}/>\n                <div className=\"feedback--output\" dangerouslySetInnerHTML={{ __html: this.state.formattedContent }}/>     \n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(VerifiedTextbox);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass WordFixSuggestion extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {word} = this.props;\n        const {reason, suggestion, source} = word;\n        return (  \n            <div className=\"word-section\">\n                <span className=\"word-warning\">{word.word}</span>\n                {reason && <div>{`${reason}.`}</div>}\n                {suggestion && <div>\n                    <span>{`Try `}</span>\n                    <span className=\"word--suggestion\">{`${suggestion}`}</span>\n                    <span> {` instead`} </span>\n                </div>}\n                {source && <div className=\"word--learn\"><a rel=\"noopener noreferrer\" target=\"_blank\" href={source}>learn more</a></div>}\n\n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(WordFixSuggestion);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport WordFixSuggestion from \"../components/word_fix_suggestion\";\n\n\nclass FeedbackExplanation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {usedWords} = this.props;\n\n        return (  \n            <div className='feedback--explanation'>\n                <ul>\n                    {usedWords.map(w => <WordFixSuggestion word={w}/>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(FeedbackExplanation);","import React, {Component} from \"react\"\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Footer from \"../components/footer\";\nimport VerifiedTextbox from \"../components/verifiedtextbox\";\nimport FeedbackExplanation from \"../components/feedbackexplanation\";\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport allWords from '../utils/words'\nimport feedbackGif from \"../images/feedback.gif\"\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        usedWords: [],\n    };\n  }\n\n  componentDidMount() {\n    const { mixpanel } = this.props\n    mixpanel.track('Page Load');\n  }\n\n  updateUsedWords = (usedWords) => {\n    this.setState({usedWords})\n  }\n\n  render() {\n    const {usedWords} = this.state;\n\n    return (\n      <Layout>\n        <SEO title=\"Fair Feedback\" />\n        <div className=\"feedback\">\n          <div className=\"feedback--input\">\n            <img className=\"feedback--gif\" src={feedbackGif} alt=\"get feedback on your feedback\" ></img>\n            <VerifiedTextbox words={allWords} setUsedWords={this.updateUsedWords}/>\n          </div>\n          <FeedbackExplanation usedWords={usedWords}/>\n        </div>\n        <Footer/>\n      </Layout>\n    );\n  }\n}\n\nexport default withMixpanel()(IndexPage)\n","const GENDERED = {\n    'GENDERED': `this word is used disproportionately to describe women`,\n    'TONE' : `this is tone policing`,\n    'UNTHREATENING': `this word is used to praise women for being non-threatening`,\n    'INAPPROPRIATE': `it is inappropriate to use this word to describe a coworker`,\n    'DISAGREEING': `it is often used for people who \"disagree while female\"`,\n    'NONINCLUSIVE': `it erases people who don't identify as men`\n}\n\nconst ABLEIST = {\n    'ABLEIST': `it perpetuates ableist language`\n}\nconst CALLOUS = {\n    'WAR': `it may be seen as making light of war`,\n    'DEATH': `it makes light of death`\n}\nconst RACIST = {\n    'RACIST_ORIGINS': `this word has racist origins`,\n    'RACIST': `this is a racist term`\n}\nconst TRANSPHOBIC = {\n    'INCLUSIVITY': `this phrase isn't inclusive of everyone`,\n    'IMPLIED_PREFERENCE': `this implies that someone's gender identity is merely a preference`\n}\nconst MISC = {\n    'SLUR': `this is a slur`,\n    'DERIVED_FROM_SLUR': `this is derived from a slur`,\n    'BETTER_LANUAGE_EXISTS': `better language exists`\n}\n\n\nconst REASONS = {\n    GENDERED,\n    ABLEIST,\n    CALLOUS,\n    RACIST,\n    TRANSPHOBIC,\n    MISC\n}\n\nconst genderedWords = [\n    {\n        word: 'bossy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: 'assertive',\n        source: null\n    },\n    {\n        word: 'abrasive',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'cute',\n        reason: REASONS.GENDERED.INAPPROPRIATE,\n        suggestion: null,\n        source: null\n    },       \n    {\n        word: 'aggressive',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },   \n    {\n        word: 'shrill',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'dramatic',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'bitchy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'bitch',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'ditzy',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'nag',\n        reason: REASONS.GENDERED.GENDERED,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'ladylike',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'bubbly',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sassy',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'chatty',\n        reason: REASONS.GENDERED.UNTHREATENING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'emotional',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'hysterical',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },    \n    {\n        word: 'flaky',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'moody',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'oversensitive',\n        reason: REASONS.GENDERED.DISAGREEING,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'man hours',\n        reason: REASONS.GENDERED.NONINCLUSIVE,\n        suggestion: 'person hours',\n        source: null\n    },\n    {\n        word: 'guys',\n        reason: REASONS.GENDERED.NONINCLUSIVE,\n        suggestion: `folks, y'all, everyone`,\n        source: null\n    },\n];\nconst ableistWords = [\n    {\n        word: 'crazy',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'insane',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'lame',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'stupid',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'dumb',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'lunatic',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'looney',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'psycho',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'schizo',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'senile',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sociopath',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'maniac',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'moron',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'nuts',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sanity check',\n        reason: REASONS.ABLEIST.ABLEIST,\n        suggestion: 'asking for validation',\n        source: null\n    },\n\n];\nconst callousWords = [\n    {\n        word: 'war room',\n        reason: REASONS.CALLOUS.WAR,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'war story',\n        reason: REASONS.CALLOUS.WAR,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'killswitch',\n        reason: REASONS.CALLOUS.DEATH,\n        suggestion: 'switch, emergency switch',\n        source: null\n    },\n    {\n        word: 'kill switch',\n        reason: REASONS.CALLOUS.DEATH,\n        suggestion: 'switch, emergency switch',\n        source: null\n    },\n    {\n        word: 'postmortem',\n        reason: REASONS.CALLOUS.DEATH,\n        suggestion: 'retrospective',\n        source: null\n    },\n    {\n        word: 'premortem',\n        reason: REASONS.CALLOUS.DEATH,\n        suggestion: 'pre-release risk assesment',\n        source: null\n    },\n];\nconst racistWords = [\n    {\n        word: 'peanut gallery',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'sold down the river',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'redline',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'eenie, meenie, miney, mo',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'hip hip hooray',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'hooray',\n        source: null\n    },\n    {\n        word: 'uppity',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'master',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'primary or main',\n        source: null\n    },\n    {\n        word: 'slave',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'replica',\n        source: null\n    },\n    {\n        word: 'whitelist',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'allowlist',\n        source: null\n    },\n    {\n        word: 'blacklist',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: 'denylist',\n        source: null\n    },\n    {\n        word: 'ghetto',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'brownbag',\n        reason: REASONS.RACIST.RACIST_ORIGINS,\n        suggestion: null,\n        source: null\n    },\n\n\n];\nconst transphobicWords = [\n    {\n        word: 'he or she',\n        reason: REASONS.TRANSPHOBIC.INCLUSIVITY,\n        suggestion: 'they',\n        source: null\n    },\n    {\n        word: 'he/she',\n        reason: REASONS.TRANSPHOBIC.INCLUSIVITY,\n        suggestion: 'they',\n        source: null\n    },\n    {\n        word: 'preferred pronouns',\n        reason: REASONS.TRANSPHOBIC.IMPLIED_PREFERENCE,\n        suggestion: 'pronouns',\n        source: null\n    },\n    {\n        word: 'self-identifies',\n        reason: REASONS.TRANSPHOBIC.IMPLIED_PREFERENCE,\n        suggestion: 'is',\n        source: null\n    },\n];\nconst miscWords = [\n    {\n        word: 'gypsy',\n        reason: REASONS.MISC.SLUR,\n        suggestion: null,\n        source: `https://now.org/blog/the-g-word-isnt-for-you-how-gypsy-erases-romani-women/`\n    },\n    {\n        word: 'gyp ',\n        reason: REASONS.MISC.DERIVED_FROM_SLUR,\n        suggestion: null,\n        source: `https://now.org/blog/the-g-word-isnt-for-you-how-gypsy-erases-romani-women/`\n    },\n    {\n        word: 'diverse candidate',\n        reason: REASONS.MISC.BETTER_LANGUAGE_EXISTS,\n        suggestion: `candidate from an underrepresented population`,\n        source: null,\n    },\n];\n\nconst allWords = [...genderedWords, ...ableistWords, ...callousWords, ...racistWords, ...transphobicWords, ...miscWords];\n\nmodule.exports = allWords;"],"sourceRoot":""}