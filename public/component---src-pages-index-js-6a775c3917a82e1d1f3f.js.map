{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/components/verifiedtextbox.js","webpack:///./src/components/word_fix_suggestion.js","webpack:///./src/components/feedbackexplanation.js","webpack:///./src/pages/index.js","webpack:///./src/utils/words.js"],"names":["Footer","className","href","VerifiedTextbox","props","handleChange","ev","formattedContent","target","value","words","usedWords","forEach","wordObject","word","wordRegex","RegExp","indexOf","push","replace","console","log","length","setUsedWords","setState","content","state","render","type","placeholder","this","onChange","dangerouslySetInnerHTML","__html","Component","withMixpanel","WordFixSuggestion","reason","suggestion","FeedbackExplanation","map","w","IndexPage","updateUsedWords","componentDidMount","mixpanel","track","title","allWords","source","module","exports"],"mappings":"mJAQeA,EANA,kBACX,yBAAKC,UAAU,UACb,uBAAGC,KAAK,yBAAR,WAAwC,0BAAMD,UAAU,aAAhB,a,sCCAxCE,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAOJC,aAAe,SAACC,GACZ,IAAaC,EAAmBD,EAAGE,OAAOC,MACrCC,EAAS,EAAKN,MAAdM,MACDC,EAAY,GAEXD,IAELA,EAAME,SAAQ,SAAAC,GACV,IAAMC,EAAOD,EAAWC,KAClBC,EAAY,IAAIC,OAAOF,GACzBP,EAAiBU,QAAQH,IAAS,GAClCH,EAAUO,KAAKL,GAEnBN,EAAmBA,EAAiBY,QAAQJ,EAAzB,kCAAsED,EAAtE,cAGvBM,QAAQC,IAAIV,GAEZA,EAAUW,QAAU,EAAKlB,MAAMmB,aAAaZ,GAC5C,EAAKa,SAAS,CAACC,aAlBXA,EAkBoBlB,uBAzBxB,EAAKmB,MAAQ,CACTD,QAAS,GACTlB,iBAAkB,IAJP,E,0GA+BnBoB,OAAA,WACI,OACI,6BACI,2BAAOC,KAAK,OAAOC,YAAa,oBAAqB5B,UAAU,oBAAoBQ,MAAOqB,KAAKJ,MAAMD,QAASM,SAAUD,KAAKzB,eAC7H,yBAAKJ,UAAU,mBAAmB+B,wBAAyB,CAAEC,OAAQH,KAAKJ,MAAMnB,sB,GApClE2B,aA0CfC,2BAAehC,G,IC1CxBiC,E,oBAEF,WAAYhC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKsB,MAAQ,GAFE,E,0GAKnBC,OAAA,WAAU,IACCb,EAAQgB,KAAK1B,MAAbU,KACDuB,EAASvB,EAAKuB,OAAL,YAA0BvB,EAAKuB,OAA/B,GACTC,EAAaxB,EAAKwB,WAAL,QAA0BxB,EAAKwB,WAA/B,eAEnB,OACI,4BACI,0BAAMrC,UAAU,oBAAoBa,EAAKA,MACzC,gDAAyBuB,EAAzB,KAAoCC,K,GAfpBJ,aAqBjBC,2BAAeC,G,ICpBxBG,E,oBAEF,WAAYnC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKsB,MAAQ,GAFE,E,0GAKnBC,OAAA,WAAU,IACChB,EAAamB,KAAK1B,MAAlBO,UAEP,OACI,yBAAKV,UAAU,yBACX,4BACKU,EAAU6B,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAmB3B,KAAM2B,U,GAb/BP,aAoBnBC,2BAAeI,G,yBCfxBG,E,oBACJ,WAAYtC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAWFuC,gBAAkB,SAAChC,GACjB,EAAKa,SAAS,CAACb,eAXf,EAAKe,MAAQ,CACTf,UAAW,IAHE,E,kHAOnBiC,kBAAA,WACuBd,KAAK1B,MAAlByC,SACCC,MAAM,c,EAQjBnB,OAAA,WAAU,IACDhB,EAAamB,KAAKJ,MAAlBf,UAEP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoC,MAAM,kBACX,yBAAK9C,UAAU,YACb,yBAAKA,UAAU,mBACb,kDACA,kBAAC,EAAD,CAAiBS,MAAOsC,IAAUzB,aAAcO,KAAKa,mBAEvD,kBAAC,EAAD,CAAqBhC,UAAWA,KAElC,kBAAC,EAAD,Q,GA/BgBuB,aAqCTC,mCAAeO,I,mBC/C9B,IA8BMM,EAAQ,UA9BQ,CAClB,CACIlC,KAAM,QACNuB,OAAO,gCACPC,WAAY,YACZW,OAAQ,MAEZ,CACInC,KAAM,WACNuB,OAAQ,KACRC,WAAY,KACZW,OAAQ,OAII,CAChB,CACInC,KAAM,iBACNuB,OAAQ,KACRC,WAAY,KACZW,OAAQ,MAEZ,CACInC,KAAM,SACNuB,OAAQ,KACRC,WAAY,KACZW,OAAQ,QAMhBC,EAAOC,QAAUH","file":"component---src-pages-index-js-6a775c3917a82e1d1f3f.js","sourcesContent":["import React from \"react\"\n\nconst Footer = () => (\n    <div className=\"footer\">\n      <a href=\"http://www.cass.codes\">made by <span className=\"underline\">cassie</span></a>\n    </div>\n)\n\nexport default Footer;\n","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass VerifiedTextbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            formattedContent: '',\n        };\n    }\n\n    handleChange = (ev) => {\n        let content, formattedContent = ev.target.value;\n        let {words} = this.props;\n        let usedWords = [];\n\n        if (!words) return \n\n        words.forEach(wordObject => {\n            const word = wordObject.word;\n            const wordRegex = new RegExp(word);\n            if (formattedContent.indexOf(word) >= 0) {\n                usedWords.push(wordObject);\n            }\n            formattedContent = formattedContent.replace(wordRegex, `<span class=\"feedback-warning\">${word}</span>`)\n        });\n\n        console.log(usedWords);\n\n        usedWords.length && this.props.setUsedWords(usedWords);\n        this.setState({content, formattedContent});\n        \n    }\n\n    render() {\n        return (  \n            <div>\n                <input type=\"text\" placeholder={\"put feedback here\"} className='feedback--textbox' value={this.state.content} onChange={this.handleChange}/>\n                <div className=\"feedback--output\" dangerouslySetInnerHTML={{ __html: this.state.formattedContent }}/>     \n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(VerifiedTextbox);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\n\n\nclass WordFixSuggestion extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {word} = this.props;\n        const reason = word.reason ? ` because ${word.reason}` : ``\n        const suggestion = word.suggestion ? ` Try ${word.suggestion} instead.` : ``;\n\n        return (  \n            <li>\n                <span className=\"feedback-warning\">{word.word}</span>\n                <span>{` is insensitive${reason}. ${suggestion}`}</span>\n            </li>\n        )\n    }\n}\n\nexport default withMixpanel()(WordFixSuggestion);","import React, {Component} from \"react\"\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport WordFixSuggestion from \"../components/word_fix_suggestion\";\n\n\nclass FeedbackExplanation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {usedWords} = this.props;\n\n        return (  \n            <div className='feedback--explanation'>\n                <ul>\n                    {usedWords.map(w => <WordFixSuggestion word={w}/>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withMixpanel()(FeedbackExplanation);","import React, {Component} from \"react\"\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Footer from \"../components/footer\";\nimport VerifiedTextbox from \"../components/verifiedtextbox\";\nimport FeedbackExplanation from \"../components/feedbackexplanation\";\nimport { withMixpanel } from 'gatsby-plugin-mixpanel';\nimport allWords from '../utils/words'\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        usedWords: [],\n    };\n  }\n\n  componentDidMount() {\n    const { mixpanel } = this.props\n    mixpanel.track('Page Load');\n  }\n\n  updateUsedWords = (usedWords) => {\n    this.setState({usedWords})\n  }\n\n\n  render() {\n    const {usedWords} = this.state;\n\n    return (\n      <Layout>\n        <SEO title=\"Fair Feedback\" />\n        <div className=\"feedback\">\n          <div className=\"feedback--input\">\n            <h1>Type your feedback</h1>\n            <VerifiedTextbox words={allWords} setUsedWords={this.updateUsedWords}/>\n          </div>\n          <FeedbackExplanation usedWords={usedWords}/>\n        </div>\n        <Footer/>\n      </Layout>\n    );\n  }\n}\n\nexport default withMixpanel()(IndexPage)\n","const genderedWords = [\n    {\n        word: 'bossy',\n        reason: `it isn't used to describe men`,\n        suggestion: 'assertive',\n        source: null\n    },\n    {\n        word: 'abrasive',\n        reason: null,\n        suggestion: null,\n        source: null\n    },\n]\n\nconst racistWords = [\n    {\n        word: 'peanut gallery',\n        reason: null,\n        suggestion: null,\n        source: null\n    },\n    {\n        word: 'uppity',\n        reason: null,\n        suggestion: null,\n        source: null\n    },\n]\n\nconst allWords = [...genderedWords, ...racistWords]\n\nmodule.exports = allWords;"],"sourceRoot":""}